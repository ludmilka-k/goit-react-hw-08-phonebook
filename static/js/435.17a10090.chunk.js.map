{"version":3,"file":"static/js/435.17a10090.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SectionContainer = styled.section`\n  margin-top: 12px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 320px;\n  padding: 8px;\n  background-color: ${props => props.theme.colors.skyblue};\n  border-radius: 8px;\n  box-shadow: 0 3px 1px rgba(0, 0, 0, 0.1), 0 2px 1px rgba(0, 0, 0, 0.08), 0 2px 2px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Title = styled.h1`\n  margin: 0 auto 12px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  text-align: center;\n  color: ${props => props.theme.colors.primaryText};\n  background-color: ${props => props.theme.colors.white};\n  font-size: 24px;\n  font-weight: 700;\n  border-radius: 8px;\n\n`;\n","import PropTypes from 'prop-types';\nimport {SectionContainer, Title} from './Section.styled'\n\nexport const Section = ({title, children}) => {\n\treturn (\n    <SectionContainer>\n      <Title>{title}</Title>\n      {children}\n    </SectionContainer>\n\t);\n};\n\nSection.prototype ={\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n}\n","import {createSelector} from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter], (contacts, filter) => {\n    if(!filter) {\n      return contacts;\n    }\n    return contacts.filter(({ name}) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  width: 320px;\n  margin: 12px auto;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  color: ${props => props.theme.colors.primaryText};\n`;\n\nexport  const InputContainer = styled.div`\n  position: relative;\n  display: inline-flex;\n`;\nexport const InputForm = styled.input`\n  display: block;\n  width: 100%;\n  font-size: 14px;\n  padding: 12px;\n  border: ${props => ` 1px solid ${props.theme.colors.grey}`};\n  border-radius: 4px;\n  color: ${props => props.theme.colors.primaryText};\n  background-color: ${props => props.theme.colors.white};\n  padding-left: 34px;\n`;\n\nexport const ButtonAdd = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  cursor: pointer;\n  font-size: 14px;\n  border: ${props => ` 1px solid ${props.theme.colors.grey}`};\n  border-radius: 4px;\n  padding: 12px;\n  background-color: ${props => props.theme.colors.white};\n  box-shadow: 0 1px 6px rgba(46, 47, 66, 0.08);\n\n  &:hover {\n    background-color: ${props => props.theme.colors.yellow};\n    border: ${props => ` 1px solid ${props.theme.colors.yellow}`};\n  }\n\n  &:active {\n    background-color: ${props => props.theme.colors.yellow};\n    border: ${props => ` 1px solid ${props.theme.colors.yellow}`};\n    box-shadow: none;\n    transform: translateY(1px);\n  }\n`;\n\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContactThunk } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors'\nimport { RiUserFill, RiPhoneFill, RiUserAddFill } from 'react-icons/ri';\nimport { Form, Label, InputContainer, InputForm, ButtonAdd } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChangeName = event => {\n    setName(event.target.value);\n  };\n  const handleChangeNumber = event => {\n    setNumber(event.target.value);\n  };\n// const handleChange = event => {\n//   const { name, value } = event.target;\n//\n//   switch (name) {\n//     case 'name':\n//       setName(value);\n//       break;\n//     case 'number':\n//       setNumber(value);\n//       break;\n//     default:\n//       return;\n//   }\n// };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isExistingContact = contacts.some(contact => {\n      return contact.name.toLowerCase() === name.toLowerCase();\n    });\n    if (isExistingContact) {\n      return alert(`${name} is already in contact`);\n    }\n\n    dispatch(addContactThunk({ name, number }));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        <InputContainer>\n          <InputForm\n            type='text'\n            name='name'\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash, and spaces. For example: Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            placeholder='Enter contact name'\n            onChange={handleChangeName} />\n          <RiUserFill style={{ position: 'absolute', top: '50%', left: '8px', transform: 'translateY(-50%)' }} />\n        </InputContainer>\n        Name\n      </Label>\n      <Label>\n        <InputContainer>\n          <InputForm\n            type='tel'\n            name='number'\n            pattern='\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}'\n            title='Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n            required\n            value={number}\n            placeholder='Enter phone number'\n            onChange={handleChangeNumber} />\n          <RiPhoneFill style={{ position: 'absolute', top: '50%', left: '8px', transform: 'translateY(-50%)' }} />\n        </InputContainer>\n        Number\n      </Label>\n\n      <ButtonAdd type='submit'>\n        <RiUserAddFill />\n        Add contact\n      </ButtonAdd>\n    </Form>\n  );\n};\n\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin-top: 12px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: ${props => ` 2px solid ${props.theme.colors.white}`};\n  border-radius: 4px;\n  gap: 8px;\n  margin-top: 12px;\n`;\n\nexport const ContactName = styled.p`\n  margin: 0;\n  color: ${props => props.theme.colors.primaryText};\n  font-weight: 500;\n  padding-left: 4px;\n`;\n\nexport const ContactNumber = styled.span`\n  color: ${props => props.theme.colors.primaryText};\n  margin-left: 8px;\n`;\n\n\nexport const Delete = styled.button`\n  //display: flex;\n  //justify-content: center;\n  //align-items: center;\n  //gap: 8px;\n  cursor: pointer;\n  background-color: ${props => props.theme.colors.white};\n  border: ${props => ` 1px solid ${props.theme.colors.grey}`};\n  border-radius: 4px;\n  padding: 12px;\n  &:hover {\n    background-color: ${props => props.theme.colors.yellow};\n    border: ${props => ` 1px solid ${props.theme.colors.yellow}`};\n  }\n\n  &:active {\n    background-color:  ${props => props.theme.colors.yellow};\n    border: ${props => ` 1px solid ${props.theme.colors.yellow}`};\n    box-shadow: none;\n    transform: translateY(1px);\n  }\n`;\n\n","import {useDispatch, useSelector} from 'react-redux';\nimport { selectError, selectFilteredContacts, selectIsLoading } from '../../redux/contacts/selectors';\nimport { deleteContactThunk } from '../../redux/contacts/operations';\nimport  { RiUserUnfollowFill } from 'react-icons/ri'\nimport { iconSize } from '../../constants';\nimport {List, Item, Delete, ContactName, ContactNumber} from './ContactList.styled';\n\n\nexport const ContactList = () => {\n\tconst dispatch = useDispatch();\n\n\tconst contacts = useSelector(selectFilteredContacts);\n\tconst isLoading = useSelector(selectIsLoading);\n\tconst error = useSelector(selectError);\n\n\tconst onRemoveContact = (contactId )=> {\n\t\tdispatch(deleteContactThunk(contactId));\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{!contacts?.length && !error && !isLoading && (\n\t\t\t\t<div>Contacts not found</div>\n\t\t\t)}\n\t\t\t{!error && !isLoading && contacts?.length > 0 && (\n\t\t\t<List>\n\t\t\t\t{contacts.map(contact => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Item key={contact.id}>\n\t\t\t\t\t\t\t<ContactName>\n\t\t\t\t\t\t\t\t<b>{contact.name}:</b><ContactNumber>{contact.number}</ContactNumber>\n\t\t\t\t\t\t\t</ContactName>\n\t\t\t\t\t\t\t<Delete type='button' onClick={() => onRemoveContact(contact.id)}>\n\t\t\t\t\t\t\t\t<RiUserUnfollowFill size={iconSize.sm} />\n\t\t\t\t\t\t\t</Delete>\n\t\t\t\t\t\t</Item>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</List>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\n","import styled from '@emotion/styled';\n\nexport const FilterForm = styled.form`\n  margin-bottom: 12px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 16px;\n  color: ${props => props.theme.colors.primaryText};\n`;\nexport const Input = styled.input`\n  display: block;\n  font-size: 14px;\n  padding: 12px;\n  border: ${props => ` 1px solid ${props.theme.colors.grey}`};\n  border-radius: 4px;\n  color: ${props => props.theme.colors.primaryText};\n  background-color: ${props => props.theme.colors.white};\n`;\n\n","import {useDispatch, useSelector} from 'react-redux';\nimport { selectFilter} from '../../redux/contacts/selectors';\nimport { filterByName } from '../../redux/contacts/filterSlice'\nimport {FilterForm, Label, Input} from './Filter.styled'\n\nexport const Filter = () => {\n\tconst filter = useSelector(selectFilter);\n\tconst dispatch = useDispatch();\n\n\tconst onFilterChange = (event) => {\n\t\tconst stringifyValue = event.target.value.toLowerCase();\n\t\tdispatch(filterByName(stringifyValue));\n\t};\nreturn (\n\t\t<FilterForm >\n\t\t\t<Label>\n\t\t\t\tFind contact by name\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={filter}\n\t\t\t\t\tonChange={onFilterChange}\n\t\t\t\t\tplaceholder=\"Search by name\"\n\t\t\t\t/>\n\t\t\t</Label>\n\t\t</FilterForm>\n\t)\n}\n\n","import {useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from '../components/ContactForm';\nimport { ContactList } from '../components/ContactList';\nimport { Filter } from '../components/Filter';\nimport {Section} from '../components/Section'\nimport { fetchContactsThunk } from '../redux/contacts/operations';\nimport {selectIsLoading, selectError } from '../redux/contacts/selectors';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [ dispatch]);\n  return (\n    <>\n    <Section title=\"Phonebook\">\n      <ContactForm />\n    </Section>\n    <Section title=\"Contacts\">\n      <Filter />\n      <ContactList />\n      {isLoading && !error && <p>Loading contacts...</p>}\n    </Section>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["SectionContainer","styled","props","theme","colors","skyblue","Title","primaryText","white","Section","title","children","prototype","PropTypes","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","createSelector","name","toLowerCase","includes","Form","Label","InputContainer","InputForm","grey","ButtonAdd","yellow","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","resetForm","onSubmit","event","preventDefault","some","contact","alert","addContactThunk","type","pattern","required","value","placeholder","onChange","target","style","position","top","left","transform","List","Item","ContactName","ContactNumber","Delete","ContactList","length","map","onClick","contactId","id","deleteContactThunk","size","iconSize","FilterForm","Input","Filter","stringifyValue","filterByName","useEffect","fetchContactsThunk"],"sourceRoot":""}